<?xml version="1.0" encoding="utf-8" ?>
<configuration>
	<htb.devfx>
		<startup>
			<core>
				<objectService>
					<extenders configSet="{key:'type'}">
						<add name="ObjectMapperExtender" type="HTB.DevFx.Data.ObjectMapperBase+ObjectMapperExtender, HTB.DevFx.Data" />
					</extenders>
				</objectService>
			</core>
		</startup>

		<objects>
			<typeAliases>
				<add name="IDataService" type="HTB.DevFx.Data.IDataService, HTB.DevFx.Data" />
				<add name="SqlServerDataStorage" type="HTB.DevFx.Data.SqlServerDataStorage, HTB.DevFx.Data" />
				<add name="OleDbDataStorage" type="HTB.DevFx.Data.OleDbDataStorage, HTB.DevFx.Data" />
				<add name="OdbcDataStorage" type="HTB.DevFx.Data.OdbcDataStorage, HTB.DevFx.Data" />
			</typeAliases>

			<object name="DataService" type="IDataService" mapTo="HTB.DevFx.Data.DataService, HTB.DevFx.Data" setting="{name:'../../data', type:'HTB.DevFx.Data.Config.DataServiceSetting, HTB.DevFx.Data'}">
				<lifetime type="Singleton" />
			</object>

			<namespace>
				<objects name="Data" configSet="{tag:'object'}">
					<typeAliases>
						<add name="ICommandTextParser" type="HTB.DevFx.Data.ICommandTextParser, HTB.DevFx.Data" />
						<add name="IDbCommandBuilder" type="HTB.DevFx.Data.IDbCommandBuilder, HTB.DevFx.Data" />
						<add name="IResultHandler" type="HTB.DevFx.Data.IResultHandler, HTB.DevFx.Data" />
						<add name="IResultModule" type="HTB.DevFx.Data.IResultModule, HTB.DevFx.Data" />
						<add name="IResultHandlerFactory" type="HTB.DevFx.Data.IResultHandlerFactory, HTB.DevFx.Data" />
						<add name="IObjectMapper" type="HTB.DevFx.Data.IObjectMapper, HTB.DevFx.Data" />
						<add name="ITypeTranslator" type="HTB.DevFx.Data.Entities.ITypeTranslator, HTB.DevFx.BaseFx" />
					</typeAliases>

					<object name="CommandTextParser" type="ICommandTextParser" mapTo="HTB.DevFx.Data.CommandTextParser, HTB.DevFx.Data">
						<lifetime type="Singleton" />
					</object>

					<object name="DbCommandBuilder" type="IDbCommandBuilder" mapTo="HTB.DevFx.Data.DbCommandBuilder, HTB.DevFx.Data">
						<lifetime type="Singleton" />
					</object>

					<object name="DynamicCommandTextParser" type="ICommandTextParser" mapTo="HTB.DevFx.Data.DynamicCommandTextParser, HTB.DevFx.Data">
						<lifetime type="Singleton" />
					</object>

					<object name="ObjectMapper" type="IObjectMapper" mapTo="HTB.DevFx.Data.ObjectMapper, HTB.DevFx.Data">
						<lifetime type="Singleton" />
					</object>

					<object name="ResultHandlerFactory" type="IResultHandlerFactory" mapTo="HTB.DevFx.Data.ResultHandlerFactory, HTB.DevFx.Data">
						<lifetime type="Singleton" />
					</object>

					<object name="ResultCacheModule" type="IResultModule" mapTo="HTB.DevFx.Data.ResultCacheModule, HTB.DevFx.Data">
						<lifetime type="Singleton" />
					</object>

					<object name="NoneResultHandler" type="IResultHandler" mapTo="HTB.DevFx.Data.NoneResultHandler, HTB.DevFx.Data">
						<lifetime type="Singleton" />
					</object>

					<object name="ArrayResultHandler" type="IResultHandler" mapTo="HTB.DevFx.Data.ArrayResultHandler, HTB.DevFx.Data">
						<lifetime type="Singleton" />
						<constructor configSet="{tag:'parameter'}">
							<parameter name="objectMapper" type="IObjectMapper" value="@ObjectMapper" />
						</constructor>
					</object>

					<object name="DataReaderResultHandler" type="IResultHandler" mapTo="HTB.DevFx.Data.DataReaderResultHandler, HTB.DevFx.Data">
						<lifetime type="Singleton" />
					</object>

					<object name="PaginateResultHandler" type="IResultHandler" mapTo="HTB.DevFx.Data.PaginateResultHandler, HTB.DevFx.Data">
						<lifetime type="Singleton" />
						<constructor configSet="{tag:'parameter'}">
							<parameter name="objectMapper" type="IObjectMapper" value="@ObjectMapper" />
						</constructor>
					</object>

					<object name="ScalarResultHandler" type="IResultHandler" mapTo="HTB.DevFx.Data.ScalarResultHandler, HTB.DevFx.Data">
						<lifetime type="Singleton" />
					</object>

					<object name="SingleResultHandler" type="IResultHandler" mapTo="HTB.DevFx.Data.SingleResultHandler, HTB.DevFx.Data">
						<lifetime type="Singleton" />
						<constructor configSet="{tag:'parameter'}">
							<parameter name="objectMapper" type="IObjectMapper" value="@ObjectMapper" />
						</constructor>
					</object>

					<object name="DataSetResultHandler" type="IResultHandler" mapTo="HTB.DevFx.Data.DataSetResultHandler, HTB.DevFx.Data">
						<lifetime type="Singleton" />
					</object>

					<object name="DataTableResultHandler" type="IResultHandler" mapTo="HTB.DevFx.Data.DataTableResultHandler, HTB.DevFx.Data">
						<lifetime type="Singleton" />
					</object>
				</objects>
			</namespace>
		</objects>

		<data debug="false" configSet="{tag:'statements', nullable:'true'}">
			<results handlerFactory="@Data.ResultHandlerFactory" moduleEnabled="false">
				<modules>
					<add name="CacheModule" type="@Data.ResultCacheModule" enabled="true" />
				</modules>
				<handlers defaultHandler="@Data.SingleResultHandler" configSet="{key:'type'}">
					<add type="System.Array" handler="@Data.ArrayResultHandler" />
					<add type="System.Data.IDataReader, System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" handler="@Data.DataReaderResultHandler" />
					<add type="HTB.DevFx.Data.Entities.IPaginateResult, HTB.DevFx.BaseFx" handler="@Data.PaginateResultHandler" />
					<add type="System.ValueType" handler="@Data.ScalarResultHandler" />
					<add type="System.String" handler="@Data.ScalarResultHandler" />
					<add type="System.Data.DataSet, System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" handler="@Data.DataSetResultHandler" />
					<add type="System.Data.DataTable, System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" handler="@Data.DataTableResultHandler" />
				</handlers>
			</results>

			<dataStorages />
			<statements />
		</data>
	</htb.devfx>
</configuration>